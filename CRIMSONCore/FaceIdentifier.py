from PythonQt.CRIMSON import FaceType

class FaceIdentifier(object):
    '''
    The FaceIdentifier object represents a unique identifier for a geometric model face. 
    Unique face identifier consists of a list of solid identifiers (strings) automatically generated by
    CRIMSON during the lofting operation, and a face type which can be a wall, an inflow, or an outflow. 
    The face types are defined by the :mod:`PythonQt.CRIMSON.FaceType` enumeration.

    For the models not created in CRIMSON, but created in an external tool and imported, the flat faces 
    are marked as :mod:`FaceType.ftCapOutflow <PythonQt.CRIMSON.FaceType>` and the curved faces are marked 
    as :mod:`FaceType.ftWall <PythonQt.CRIMSON.FaceType>`, and the `parentSolidIndices` contain a single
    string of form `face #`, where `#` is the index of the face computed during model import.
    '''

    def __init__(self, faceType, parentSolidIndices):
        self.faceType = faceType
        self.parentSolidIndices = parentSolidIndices

    def getFaceType(self):  # for use in CPP code
        return self.faceType

    def getParentSolidIndices(self):  # for use in CPP code
        return self.parentSolidIndices

    def __eq__(self, other):
        return self.faceType == other.faceType and self.parentSolidIndices == other.parentSolidIndices

    def  __hash__(self):
        return hash((self.faceType, self.parentSolidIndices))
